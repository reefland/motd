#!/bin/bash

# Max Temperature (red color)
MAX_TEMP_C=40
MAX_TEMP_F=104

# Warning Temperature, percentage of MAX_TEMP 1 = 100% (yellow color)
WARN_PERCENT=0.85

# set column width
COLUMNS=2
# colors
white="\e[39m"
yellow="\e[1;33m"
green="\e[1;32m"
red="\e[1;31m"
dim="\e[2m"
undim="\e[0m"

# Types of disks to look for:
findthese="-e ata- -e scsi-SATA_"  # Used by grep to define disk by id types to include IDE/SATA - you might add another for usb "-e ata- -e usb-"

# Types of disks to exclude such as partitions, cd-roms, world wide names, etc.
excludethese="-ve ""part[0-9]"" -e ""sr[0-9]"" -e ""wwn-"" -e ""total"""

# Dynamically generate simple disk names available (sda, sdb, sdc, ...)  these change if disks are removed
disksalias=$(ls -l /dev/disk/by-id/|grep ${findthese}|grep ${excludethese}|col|sort -k 10|uniq -f 10|cut -d "/" -f3 );disksalias=($disksalias)

rawdisks=$(ls -lQ /dev/disk/by-id/|grep ${findthese}|grep ${excludethese}|col|sort -k 10|uniq -f 10|cut -d "\"" -f2)
# Dynamically generate fixed disk names which will not change
disks=$(printf '%s\n' "${rawdisks[@]}"|cut -d "_" -f -3);disks=($disks)
# Dynamically generate get disk names
disknames=$(printf '%s\n' "${rawdisks[@]}"|cut -d "-" -f2|cut -d "_" -f -3);disknames=($disknames)
# Dynamically grab last 4 digits of disk serial number
diskserials=$(printf '%s\n' "${rawdisks[@]}"|rev|cut -c 1-4 |rev);diskserials=($diskserials)

# hddtemp daemon connection info
hddtemp_host=localhost
hddtemp_port=7634

# logfiles to check
logfiles='/var/log/syslog /var/log/syslog.1'

# get all lines with smartd entries from syslog
lines=$(tac $logfiles 2>/dev/null | grep -hiP 'smartd.*previous self-test')
# use nc to query temps from hddtemp daemon, echo needed to get NC to return data
hddtemp=$(echo -n | nc $hddtemp_host $hddtemp_port |sed 's/|//m' | sed 's/||/ \n/g')

out=""
for i in "${!disks[@]}"; do
    # Get smartd testing status
    status=$( (grep "/dev/disk/by-id/${disks[$i]}" <<< "${lines}") | grep -m 1 -oP "previous self-test.*" | awk '{ print $4 " " $5 }')
    # Get Temperature and Unit
    temp=$( (grep "${disksalias[$i]}" <<< "${hddtemp}") | cut -d "|" -f3)
    # Get The Unit from the temperature
    unit=$( (grep "${disksalias[$i]}" <<< "${hddtemp}") | cut -d "|" -f4)
    unit=${unit% } # Trim trailing space if it has it

    # Determine if MAX_TEMP is based on C or F
    case "${unit}" in
      "f"|"F")
        MAX_TEMP=MAX_TEMP_F 
      ;;
      "c"|"C")
        MAX_TEMP=MAX_TEMP_C
      ;;
      *) # Unknown value
        MAX_TEMP=0
        unit=""
      ;;
    esac;

    # HDDTEMP can return an error if a drive was hot-swapped since restart
    # Deamon would need to be restarted to pickup new drive
    case "${temp}" in
      "ERR")
        color=$red
      ;;
      "UNK")
        color=$dim
      ;;
      *) # A temperature value
        if [[ "${temp}" -gt "${MAX_TEMP}" ]]; then
            color=$red
        else
          WARN_TEMP=$(echo "${MAX_TEMP_F} * ${WARN_PERCENT}" | bc)
          if [[ "${temp}" -gt $(printf %.0f ${WARN_TEMP}) ]]; then
            color=$yellow
          else          
            color=$green
          fi
        fi
      ;;
    esac;

    # Set color based on known or unknown status
    case $status in
      "without error")
        status_color=$green
      ;;
      "with error")
        status_color=$red
      ;;
      *)
        status="untested"
        status_color=$dim
      ;;
    esac;

    # print temp & smartd error
    out+="${disknames[$i]}_${diskserials[$i]} (${disksalias[$i]}):,${color}${temp}${unit}${undim} | ${status_color}${status}${undim},"
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

printf "\ndisk status:\n"
printf "$out" | column -ts $',' | sed -e 's/^/  /'
